-- List of ACTORS(ID, FN, LN) that acted in movies where language is English
-- From this list, only show movies that include the word 'Home' in the title
SELECT a.actor_id, first_name,last_name,title,l.language_id,name
FROM actor a,
	 film_actor fa,
     film f,
     language l 
WHERE a.actor_id =fa.actor_id
AND fa.film_id = f.film_id
AND f.language_id = l.language_id
ORDER BY a.actor_id




# Subqueries

use sql_intro;

select * from employees;

select emp_name, dept, salary
from employees where salary > (select avg(salary) from employees);

select emp_name, gender, dept, salary
from employees where salary >
(select salary from employees where emp_name = 'John');






use classicmodels;

select * from products;

select * from orderdetails;

select productcode, productname, msrp from products
where productcode in (select productcode from orderdetails
where priceeach < 100);







#Stored Procedure

use sql_iq;
select * from players;

delimiter &&
create procedure top_players()
begin
select name, country, goals
from players where goals>6;
End &&
delimiter ;

call top_players();






#SP using IN

delimiter //
create procedure sp_sortBySalary(IN var int)
begin
select name, age, salary from emp_details
order by salary desc limit var;
end //
delimiter ;

call sp_sortBySalary(3);

delimiter //
create procedure update_salary(IN temp_name varchar(20), in
new_salary float)
begin
update emp_details set
salary = new_salary where name=temp_name;
end; //

select * from emp_details;

call update_salary('Marry', 80000);





#SP using OUT

delimiter //
create procedure sp_CountEmployees(OUT Total_Emps int)
begin
select count(name) into Total_Emps from emp_details
where sex='F';
end //
delimiter ;

call sp_CountEmployees(@F_emp);
select @F_emp as female_emps;






# Trigger in SQL

create table student
(st_roll int, age int, name varchar(30), mark float);

delimiter //
create trigger marks_verify_st
before insert on student
for each row
if new.mark < 0 then set new.mark=50;
end if; //

insert into student
values(501,10,'Ruth', 75.0),
(502,12, 'Mike', -20.5),
(503, 13, 'Dave', 90.0),
(504, 10, "Jacobs", -12.5);

select * from student;

# drop trigger marks_verify_st;




